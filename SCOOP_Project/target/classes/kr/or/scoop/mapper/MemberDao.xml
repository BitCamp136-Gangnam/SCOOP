<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.scoop.dao.MemberDao">
   <!--
        name,dname, drank,address,idtime,mrank,loginnum
    -->
    <!-- 일반회원가입 -->
    <insert id="insertMember" parameterType="kr.or.scoop.dto.Member">
       insert into member(email, pwd, name,idtime,loginnum)
       values (#{email},#{pwd},#{name},SYSDATE,1)
    </insert>
	
	<select id="loginCheck" resultType="int">
		select count(*)
		from member 
		where email = #{param1} and pwd = #{param2}
	</select>
	
	<select id="pwdCheck" resultType="kr.or.scoop.dto.Member">
		select pwd from member where email = #{param1}
	</select>
	
	<!-- public String googleLogin(String email, String name, HttpSession session); -->
	<select id="googleIdCheck" resultType="int">
		select count(*)
		from member 
		where email = #{param1} and name = #{param2}
	</select>
	
	<insert id="googleInsertCheck">
       insert into member(email,pwd,name,idtime,loginnum)
       values (#{param1},'google',#{param2},SYSDATE,3)
    </insert>
    
    <!-- public String googleLogin(String email, String name, HttpSession session); -->
	<select id="naverIdCheck" resultType="int">
		select count(*)
		from member 
		where email = #{param1} and name = #{param2}
	</select>
	
	<insert id="naverInsertCheck">
       insert into member(email,pwd,name,idtime,loginnum)
       values (#{param1},'naver',#{param2},SYSDATE,2)
    </insert>
    
    <select id="idCheck" resultType="int">
		select count(*)
		from member 
		where email = #{param1}
	</select>
	
	<select id="getMember" resultType="kr.or.scoop.dto.Member">
		select email,name,pwd,dname,drank,address from member 
		where email = #{email}
	</select>
	
	<update id="updateMember" parameterType="kr.or.scoop.dto.Member">
		update member
		set email = #{email}, pwd = #{pwd}, name=#{name}, dname=#{dname}, drank=#{drank} , address = #{address}
		where email = #{email}
	</update>
	<resultMap type="kr.or.scoop.dto.Member" id="Member">
	<result column="email" property="email"/>
	<result column="pwd" property="pwd"/>
	<result column="name" property="name"/>
	<result column="dname" property="dname"/>
	<result column="drank" property="drank"/>
	<result column="address" property="address"/>
	<result column="idtime" property="idtime"/>
	<result column="loginnum" property="loginnum"/>
	<result column="prifile" property="prifile"/>
	</resultMap>
	<resultMap type="kr.or.scoop.dto.Role" id="Role">
	<result column="email" property="email"/>
	<result column="rname" property="rname"/>
	<collection property="member" resultMap="Member"/>
	</resultMap>
	<select id="getRole" resultType="kr.or.scoop.dto.Role">
	select m.email , r.RNAME from member m join role r on m.email = r.email where r.email= #{email}
	</select>
</mapper>